{"ast":null,"code":"var _jsxFileName = \"/home/rishi/flowapp1/flowchart-app/src/components/FlowChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { stringify } from \"flatted\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, MiniMap, Controls, Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: \"1\",\n  type: \"input\",\n  data: {\n    label: \"Start\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nconst initialEdges = [];\nconst FlowChart = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodeDetails, setNodeDetails] = useState({\n    subject: \"\",\n    body: \"\",\n    time: \"\",\n    date: \"\",\n    days: \"\",\n    emails: \"\"\n  });\n  const [isFlowSaved, setIsFlowSaved] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const addNode = type => {\n    const id = (nodes.length + 1).toString();\n    const newNode = {\n      id,\n      data: {\n        label: type\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    if (nodes.length > 0) {\n      setEdges(eds => [...eds, {\n        id: `e${nodes[nodes.length - 1].id}-${id}`,\n        source: nodes[nodes.length - 1].id,\n        target: id\n      }]);\n    }\n  };\n  const handleNodeClick = (event, node) => {\n    if (node.data.label === \"Cold Email\" || node.data.label === \"Wait\" || node.data.label === \"Lead Source\") {\n      setSelectedNode(node);\n    }\n  };\n  const handleDetailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNodeDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const saveNodeDetails = () => {\n    setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n      ...node,\n      data: {\n        ...node.data,\n        details: {\n          ...nodeDetails\n        },\n        label: selectedNode.data.label === \"Cold Email\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cold Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Subject: \", nodeDetails.subject]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Date: \", nodeDetails.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Time: \", nodeDetails.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this) : selectedNode.data.label === \"Wait\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Days: \", nodeDetails.days]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lead Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Email IDs: \", nodeDetails.emails.split(\",\").length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }\n    } : node));\n    setSelectedNode(null);\n    setNodeDetails({\n      subject: \"\",\n      body: \"\",\n      time: \"\",\n      date: \"\",\n      days: \"\",\n      emails: \"\"\n    });\n  };\n  const saveFlowchart = () => {\n    setIsFlowSaved(true);\n  };\n  const sendToBackend = async () => {\n    if (!isFlowSaved) {\n      alert(\"Please save the flowchart before sending.\");\n      return;\n    }\n    console.log(\"these are nodes\", nodes);\n    const arr1 = {\n      'body': '',\n      'date': '',\n      'days': '',\n      'emails': '',\n      'subject': '',\n      'time': ''\n    };\n    const keys1 = Object.keys(arr1);\n    for (let i = 0; i < nodes.length; i++) {\n      if (nodes[i].data.details) {\n        const dets1 = nodes[i].data.details;\n        console.log('hi these are dets', dets1);\n        for (let j = 0; j < keys1.length; j++) {\n          if (keys1[j] in dets1 && dets1[keys1[j]]) {\n            if (arr1[keys1[j]] != \"\") {\n              arr1[keys1[j]] = dets1[keys1[j]];\n            }\n          }\n        }\n      }\n    }\n    console.log('the collected dets are', arr1);\n\n    // console.log('these are dets',flowchartJsonString);\n\n    // // Usage Example\n    // const jsonString = collectFlowchartDetails(nodes);\n    // console.log(jsonString);\n\n    console.log('these are node 1 details', nodes[1].data.details);\n    console.log(\"these are edges\", edges);\n    const flowchartData = {\n      nodes,\n      edges\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/save-flowchart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(flowchartData)\n      });\n      if (response.ok) {\n        alert(\"Flowchart saved and sent to backend successfully!\");\n      } else {\n        alert(\"Failed to send flowchart to backend.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending flowchart:\", error);\n      console.error(\"Stack Trace:\", error.stack);\n      alert(\"Error sending flowchart to backend.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: handleNodeClick,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        right: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(\"Cold Email\"),\n        children: \"Add Cold Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(\"Wait\"),\n        children: \"Add Wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(\"Lead Source\"),\n        children: \"Add Lead Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveFlowchart,\n        children: \"Save Flowchart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendToBackend,\n        children: \"Send to Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"20%\",\n        left: \"20%\",\n        width: \"300px\",\n        padding: \"20px\",\n        backgroundColor: \"white\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedNode.data.label === \"Cold Email\" ? \"Cold Email Details\" : selectedNode.data.label === \"Wait\" ? \"Wait Node Details\" : \"Lead Source Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), selectedNode.data.label === \"Cold Email\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Subject:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"subject\",\n            value: nodeDetails.subject,\n            onChange: handleDetailChange,\n            style: {\n              width: \"100%\",\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Body:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"body\",\n            value: nodeDetails.body,\n            onChange: handleDetailChange,\n            style: {\n              width: \"100%\",\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            value: nodeDetails.date,\n            onChange: handleDetailChange,\n            style: {\n              width: \"100%\",\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"time\",\n            value: nodeDetails.time,\n            onChange: handleDetailChange,\n            style: {\n              width: \"100%\",\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), selectedNode.data.label === \"Wait\" && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Days:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"days\",\n          value: nodeDetails.days,\n          onChange: handleDetailChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), selectedNode.data.label === \"Lead Source\" && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email IDs (comma-separated):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"emails\",\n          value: nodeDetails.emails,\n          onChange: handleDetailChange,\n          style: {\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveNodeDetails,\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedNode(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowChart, \"hoBvaFyHTuPvWEI9s9i62jqDcm8=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = FlowChart;\nexport default FlowChart;\nvar _c;\n$RefreshReg$(_c, \"FlowChart\");","map":{"version":3,"names":["React","useState","useCallback","stringify","ReactFlow","addEdge","useNodesState","useEdgesState","MiniMap","Controls","Background","jsxDEV","_jsxDEV","Fragment","_Fragment","initialNodes","id","type","data","label","position","x","y","initialEdges","FlowChart","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","nodeDetails","setNodeDetails","subject","body","time","date","days","emails","isFlowSaved","setIsFlowSaved","onConnect","params","eds","addNode","length","toString","newNode","Math","random","nds","source","target","handleNodeClick","event","node","handleDetailChange","e","name","value","prev","saveNodeDetails","map","details","children","fileName","_jsxFileName","lineNumber","columnNumber","split","saveFlowchart","sendToBackend","alert","console","log","arr1","keys1","Object","keys","i","dets1","j","flowchartData","response","fetch","method","headers","JSON","ok","error","stack","style","height","onNodeClick","fitView","top","right","onClick","left","width","padding","backgroundColor","border","borderRadius","zIndex","onChange","marginBottom","marginRight","_c","$RefreshReg$"],"sources":["/home/rishi/flowapp1/flowchart-app/src/components/FlowChart.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { stringify } from \"flatted\";\nimport ReactFlow, {\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  MiniMap,\n  Controls,\n  Background,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst initialNodes = [\n  {\n    id: \"1\",\n    type: \"input\",\n    data: { label: \"Start\" },\n    position: { x: 250, y: 5 },\n  },\n];\n\nconst initialEdges = [];\n\nconst FlowChart = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodeDetails, setNodeDetails] = useState({\n    subject: \"\",\n    body: \"\",\n    time: \"\",\n    date: \"\",\n    days: \"\",\n    emails: \"\",\n  });\n\n  const [isFlowSaved, setIsFlowSaved] = useState(false);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const addNode = (type) => {\n    const id = (nodes.length + 1).toString();\n    const newNode = {\n      id,\n      data: { label: type },\n      position: { x: Math.random() * 400, y: Math.random() * 400 },\n    };\n    setNodes((nds) => [...nds, newNode]);\n\n    if (nodes.length > 0) {\n      setEdges((eds) => [\n        ...eds,\n        { id: `e${nodes[nodes.length - 1].id}-${id}`, source: nodes[nodes.length - 1].id, target: id },\n      ]);\n    }\n  };\n\n  const handleNodeClick = (event, node) => {\n    if (\n      node.data.label === \"Cold Email\" ||\n      node.data.label === \"Wait\" ||\n      node.data.label === \"Lead Source\"\n    ) {\n      setSelectedNode(node);\n    }\n  };\n\n  const handleDetailChange = (e) => {\n    const { name, value } = e.target;\n    setNodeDetails((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const saveNodeDetails = () => {\n    setNodes((nds) =>\n      nds.map((node) =>\n        node.id === selectedNode.id\n          ? {\n              ...node,\n              data: {\n                ...node.data,\n                details: { ...nodeDetails },\n                label:\n                  selectedNode.data.label === \"Cold Email\" ? (\n                    <div>\n                      <strong>Cold Email</strong>\n                      <br />\n                      <small>Subject: {nodeDetails.subject}</small>\n                      <br />\n                      <small>Date: {nodeDetails.date}</small>\n                      <br />\n                      <small>Time: {nodeDetails.time}</small>\n                    </div>\n                  ) : selectedNode.data.label === \"Wait\" ? (\n                    <div>\n                      <strong>Wait</strong>\n                      <br />\n                      <small>Days: {nodeDetails.days}</small>\n                    </div>\n                  ) : (\n                    <div>\n                      <strong>Lead Source</strong>\n                      <br />\n                      <small>Email IDs: {nodeDetails.emails.split(\",\").length}</small>\n                    </div>\n                  ),\n              },\n            }\n          : node\n      )\n    );\n    setSelectedNode(null);\n    setNodeDetails({ subject: \"\", body: \"\", time: \"\", date: \"\", days: \"\", emails: \"\" });\n  };\n\n  const saveFlowchart = () => {\n    setIsFlowSaved(true);\n  };\n\n  const sendToBackend = async () => {\n    if (!isFlowSaved) {\n      alert(\"Please save the flowchart before sending.\");\n      return;\n    }\n\n   \n\n    console.log(\"these are nodes\",nodes);\n    const arr1={'body':'',\n      'date':'',\n      'days':'',\n      'emails':'',\n      'subject':'',\n      'time':''};\n    const keys1=Object.keys(arr1);\n    for(let i=0;i<nodes.length;i++){\n      if(nodes[i].data.details){\n      const dets1=nodes[i].data.details;\n      console.log('hi these are dets',dets1)\n      for(let j=0;j<keys1.length;j++){\n        if(keys1[j] in dets1 && dets1[keys1[j]]){\n          if(arr1[keys1[j]]!=\"\"){\n          arr1[keys1[j]]=dets1[keys1[j]];\n          }\n        }\n      }\n    }\n\n    }\n\n    console.log('the collected dets are',arr1);\n    \n    // console.log('these are dets',flowchartJsonString);\n    \n    \n    // // Usage Example\n    // const jsonString = collectFlowchartDetails(nodes);\n    // console.log(jsonString);\n    \n    console.log('these are node 1 details',nodes[1].data.details)\n    console.log(\"these are edges\", edges);\n\n    const flowchartData = { nodes, edges };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/save-flowchart\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(flowchartData),\n      });\n\n      if (response.ok) {\n        alert(\"Flowchart saved and sent to backend successfully!\");\n      } else {\n        alert(\"Failed to send flowchart to backend.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending flowchart:\", error);\n      console.error(\"Stack Trace:\", error.stack);\n      alert(\"Error sending flowchart to backend.\");\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeClick={handleNodeClick}\n        fitView\n      >\n        <MiniMap />\n        <Controls />\n        <Background />\n      </ReactFlow>\n      <div style={{ position: \"absolute\", top: 10, right: 10 }}>\n        <button onClick={() => addNode(\"Cold Email\")}>Add Cold Email</button>\n        <button onClick={() => addNode(\"Wait\")}>Add Wait</button>\n        <button onClick={() => addNode(\"Lead Source\")}>Add Lead Source</button>\n        <button onClick={saveFlowchart}>Save Flowchart</button>\n        <button onClick={sendToBackend}>Send to Backend</button>\n      </div>\n\n      {selectedNode && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"20%\",\n            left: \"20%\",\n            width: \"300px\",\n            padding: \"20px\",\n            backgroundColor: \"white\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            zIndex: 10,\n          }}\n        >\n          <h3>\n            {selectedNode.data.label === \"Cold Email\"\n              ? \"Cold Email Details\"\n              : selectedNode.data.label === \"Wait\"\n              ? \"Wait Node Details\"\n              : \"Lead Source Details\"}\n          </h3>\n          {selectedNode.data.label === \"Cold Email\" && (\n            <>\n              <label>\n                Subject:\n                <input\n                  type=\"text\"\n                  name=\"subject\"\n                  value={nodeDetails.subject}\n                  onChange={handleDetailChange}\n                  style={{ width: \"100%\", marginBottom: \"10px\" }}\n                />\n              </label>\n              <label>\n                Body:\n                <textarea\n                  name=\"body\"\n                  value={nodeDetails.body}\n                  onChange={handleDetailChange}\n                  style={{ width: \"100%\", marginBottom: \"10px\" }}\n                />\n              </label>\n              <label>\n                Date:\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  value={nodeDetails.date}\n                  onChange={handleDetailChange}\n                  style={{ width: \"100%\", marginBottom: \"10px\" }}\n                />\n              </label>\n              <label>\n                Time:\n                <input\n                  type=\"time\"\n                  name=\"time\"\n                  value={nodeDetails.time}\n                  onChange={handleDetailChange}\n                  style={{ width: \"100%\", marginBottom: \"10px\" }}\n                />\n              </label>\n            </>\n          )}\n          {selectedNode.data.label === \"Wait\" && (\n            <label>\n              Days:\n              <input\n                type=\"number\"\n                name=\"days\"\n                value={nodeDetails.days}\n                onChange={handleDetailChange}\n                style={{ width: \"100%\", marginBottom: \"10px\" }}\n              />\n            </label>\n          )}\n          {selectedNode.data.label === \"Lead Source\" && (\n            <label>\n              Email IDs (comma-separated):\n              <textarea\n                name=\"emails\"\n                value={nodeDetails.emails}\n                onChange={handleDetailChange}\n                style={{ width: \"100%\", marginBottom: \"10px\" }}\n              />\n            </label>\n          )}\n          <button onClick={saveNodeDetails} style={{ marginRight: \"10px\" }}>\n            Save\n          </button>\n          <button onClick={() => setSelectedNode(null)}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FlowChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}